/*
Copyright 2022 The kubeall.com Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.kube_all.api.rbac.v1alpha1;

import "k8s.io/api/rbac/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/kube-all/api/rbac/v1alpha1";

message KubeUser {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KubeUserSpec spec = 2;

  optional KubeUserStatus status = 3;
}

message KubeUserAPIKey {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KubeUserAPIKeySpec spec = 2;

  optional KubeUserAPIKeyStatus status = 3;
}

// KubeUserAPIKeyList contains a list of KubeUserAPIKey
message KubeUserAPIKeyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated KubeUserAPIKey items = 2;
}

message KubeUserAPIKeySpec {
  // relate user
  // +kubebuilder:validation:Required
  optional string userRef = 1;

  // +optional
  optional string key = 2;

  // +optional
  optional string secret = 3;

  // +optional
  optional string enable = 4;

  // expired time, if nil will not expire
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expired = 5;
}

message KubeUserAPIKeyStatus {
}

// KubeUserList contains a list of KubeUser
message KubeUserList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated KubeUser items = 2;
}

message KubeUserSpec {
  // username
  // +kubebuilder:validation:Required
  optional string username = 1;

  // user email
  // +optional
  optional string email = 2;

  // default language
  // +kubebuilder:validation:Enum=zh;en
  // +optional
  optional string language = 3;

  // login password
  // +optional
  optional string password = 4;

  // user's mobile phone
  // +optional
  optional string mobilePhone = 5;
}

message KubeUserStatus {
  // last login time
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastLoginTime = 1;

  // last login remote ip
  // +optional
  optional string lastRemoteIp = 2;

  // if available is false, user will not login system
  // +kubebuilder:default:=true
  optional bool enable = 3;

  // etcd only save password with encrypt
  // +optional
  optional string passwordEncrypt = 4;
}

// UserKubeConfig is the Schema for the usermanages API
message UserKubeConfig {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional UserKubeConfigSpec spec = 2;

  optional UserKubeConfigStatus status = 3;
}

// UserKubeConfigList contains a list of UserKubeConfig
message UserKubeConfigList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated UserKubeConfig items = 2;
}

// UserKubeConfigSpec defines the desired state of UserKubeConfig
message UserKubeConfigSpec {
  // ref kubeuser
  // +kubebuilder:validation:Required
  optional string kubeUserRef = 1;

  // cluster resource name
  // +kubebuilder:validation:Required
  optional string clusterRef = 2;

  // expire time
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expiredTime = 3;

  // user ClientCertificateData if content is raw data will auto base64 encode
  // is csr.Status.Certificate
  optional string clientCertificateData = 5;

  // user ClientKeyData if content is raw data will auto base64 encode
  // csr private key
  optional string clientKeyData = 6;
}

// UserKubeConfigStatus defines the observed state of UserKubeConfig
message UserKubeConfigStatus {
  // if false app will not use this kubeconfig although available is true
  // +optional
  // +kubebuilder:default:=true
  optional bool enable = 1;

  // if true, app can use kubeconfig connect with cluster
  // +optional
  // +kubebuilder:default:=true
  optional bool available = 2;

  // Only one condition of a given type is allowed.
  optional string type = 3;

  // ref  cluster's CertificateSigningRequest
  // +optional
  optional string csrRef = 5;

  // +optional
  optional string hash = 6;

  // user ClientCertificateData if content is raw data will auto base64 encode
  // +optional
  optional bytes encryptedClientCertificateData = 7;

  // user ClientKeyData if content is raw data will auto base64 encode
  // +optional
  optional bytes encryptedClientKeyData = 8;

  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastCheck = 9;
}

// WorkspaceRole workspace role
message WorkspaceRole {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional WorkspaceRoleSpec spec = 2;
}

// WorkspaceRoleList contains a list of Workspace
message WorkspaceRoleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated WorkspaceRole items = 2;
}

message WorkspaceRoleSpec {
  // +optional
  repeated k8s.io.api.rbac.v1.PolicyRule rules = 1;

  // ref cluster roles, it must have label: kubeall.com/custom`
  // +optional
  repeated string clusterRoleRefs = 2;

  // Description  about workspace role
  // +kubebuilder:validation:Required
  optional string description = 3;

  // only ref pod's namespace role,  it must have label: kubeall.com/custom
  // +optional
  repeated string roleRefs = 4;
}

